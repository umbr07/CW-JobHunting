generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Company {
  Id_company  Int        @id(map: "PK__Company__465FEAEA39ED3FD7")
  NameCompany String     @db.NVarChar(50)
  Location    String     @db.NVarChar(50)
  Description String?    @db.NVarChar(Max)
  Users       Users      @relation(fields: [Id_company], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_Company_Users")
  Vacancys    Vacancys[]
}

model sysdiagrams {
  name         String @db.NVarChar(128)
  principal_id Int
  diagram_id   Int    @id(map: "PK__sysdiagr__C2B05B617EED7C88") @default(autoincrement())
  version      Int?
  definition   Bytes?

  @@unique([principal_id, name], map: "UK_principal_name")
}

model Users {
  Id            Int            @id(map: "PK__Users__3214EC07B40E8DA8") @default(autoincrement())
  Mail          String         @db.VarChar(50)
  Password      String         @db.VarChar(Max)
  Phone         String         @db.VarChar(50)
  FirstName     String         @db.NVarChar(50)
  LastName      String         @db.NVarChar(50)
  Role          Int            @default(0, map: "DF__Users__Role__49C3F6B7")
  Company       Company?
  SocialNetwork SocialNetwork?
}

model Vacancys {
  Id               Int                @id(map: "PK__Vacancys__3214EC0726CC33B0") @default(autoincrement())
  Id_company       Int
  Job_title        String             @db.NVarChar(50)
  Description      String             @db.NVarChar(Max)
  Salary           String             @db.NVarChar(30)
  Location         String             @db.NVarChar(50)
  RespondVacancies RespondVacancies[]
  Company          Company            @relation(fields: [Id_company], references: [Id_company], onDelete: Cascade, onUpdate: NoAction, map: "FK_Vacancys_Company")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model RespondVacancies {
  Id             Int      @id(map: "PK__RespondV__3214EC07ABF777DB") @default(autoincrement())
  Id_vacancies   Int
  Id_company     Int
  Id_user        Int
  Mail           String   @db.VarChar(50)
  Phone          String   @db.VarChar(50)
  FirstName      String   @db.NVarChar(50)
  LastName       String   @db.NVarChar(50)
  git_hub        String?  @db.NVarChar(Max)
  linked_in      String?  @db.NVarChar(Max)
  Specialization String?  @db.NVarChar(Max)
  Expirience     String?  @db.NVarChar(Max)
  Vacancys       Vacancys @relation(fields: [Id_vacancies], references: [Id], onUpdate: NoAction, onDelete: Cascade, map: "FK_RespondVacancies_Vacancys")
}

model SocialNetwork {
  Id_user        Int     @id(map: "PK__SocialNe__B607F2482AE6AECC")
  git_hub        String? @db.NVarChar(Max)
  linked_in      String? @db.NVarChar(Max)
  Specialization String? @db.NVarChar(Max)
  Expirience     String? @db.NVarChar(Max)
  Users          Users   @relation(fields: [Id_user], references: [Id], onUpdate: NoAction, map: "FK_SocialNetwork_Users")
}
