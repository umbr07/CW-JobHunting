generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Company {
  Id_company  Int        @id(map: "PK__Company__465FEAEA900221FC")
  NameCompany String     @db.NVarChar(50)
  Location    String     @db.NVarChar(50)
  Users       Users      @relation(fields: [Id_company], references: [Id], onUpdate: NoAction, map: "FK_Company_Users", onDelete: Cascade)
  Vacancys    Vacancys[]
}

model sysdiagrams {
  name         String @db.NVarChar(128)
  principal_id Int
  diagram_id   Int    @id(map: "PK__sysdiagr__C2B05B617EED7C88") @default(autoincrement())
  version      Int?
  definition   Bytes?

  @@unique([principal_id, name], map: "UK_principal_name")
}

model Tokens {
  Id_users     Int     @id(map: "PK__Tokens__98157C6D35BB440A")
  refreshToken String? @db.NVarChar(Max)
  Users        Users   @relation(fields: [Id_users], references: [Id], onUpdate: NoAction, map: "FK_Tokens_Users")
}

model Users {
  Id        Int      @id(map: "PK__Users__3214EC07B40E8DA8") @default(autoincrement())
  Mail      String   @db.VarChar(50)
  Password  String   @db.VarChar(Max)
  Phone     String   @db.VarChar(50)
  FirstName String   @db.NVarChar(50)
  LastName  String   @db.NVarChar(50)
  Role      Int      @default(0, map: "DF__Users__Role__49C3F6B7")
  Company   Company? 
  Tokens    Tokens?
}

model Vacancys {
  Id          Int     @id(map: "PK__Vacancys__3214EC0773B6A8F2") @default(autoincrement())
  Id_company  Int
  Job_title   String  @db.NVarChar(50)
  Description String  @db.NVarChar(50)
  Salary      String  @db.NVarChar(30)
  Location    String  @db.NVarChar(50)
  Company     Company @relation(fields: [Id_company], references: [Id_company], onUpdate: NoAction, map: "FK_Vacancys_Company", onDelete: Cascade)
}
